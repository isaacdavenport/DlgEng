<!--
   Confidential Source Code Property Toys2Life LLC Colorado 2017
   www.toys2life.org
-->

<core:PageBase x:Class="DialogEngine.Views.DialogView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:DialogEngine.Views"
      xmlns:core="clr-namespace:DialogEngine.Core"
      xmlns:controls="clr-namespace:DialogEngine.Controls.Views"
      xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
      xmlns:enums ="clr-namespace:DialogEngine.Models.Enums"
      xmlns:cmd="http://www.galasoft.ch/mvvmlight"
      xmlns:global="clr-namespace:DialogEngine"
      TextElement.Foreground="{DynamicResource MaterialDesignBody}"
      xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
      TextElement.FontWeight="Regular"
      TextElement.FontSize="13"
      TextOptions.TextFormattingMode="Ideal" 
      TextOptions.TextRenderingMode="Auto"
      mc:Ignorable="d" 
      d:DesignHeight="300" d:DesignWidth="300"
      Title="Dialog">

    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition MinWidth="400" Width="1*" />
            <ColumnDefinition Width="10" />
            <ColumnDefinition Width="2.5*" />
        </Grid.ColumnDefinitions>

        <Border CornerRadius="5" 
                BorderBrush="LightGray" 
                BorderThickness="1" 
                Grid.Column="0" 
                Grid.Row="0" 
                Margin="8,8,5,8">
            <Grid  VerticalAlignment="Stretch" HorizontalAlignment="Stretch" >

                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="auto" />
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition></ColumnDefinition>
                </Grid.ColumnDefinitions>

                <StackPanel Grid.Row="0" Grid.Column="0" Margin="5,5,5,5">

                    <TabControl Margin="0,5,5,0" TabStripPlacement="Left"  >
                        <TabControl.Resources>
                            <Style TargetType="TabItem">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="TabItem">
                                            <Grid Name="Panel" >
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="auto" />
                                                    <ColumnDefinition Width="*" />
                                                </Grid.ColumnDefinitions>
                                                <ContentPresenter x:Name="ContentSite"
                                                                  VerticalAlignment="Center"                                                                 
                                                                  HorizontalAlignment="Center"
                                                                  ContentSource="Header"
                                                                  Height="auto"
                                                                  Grid.Column="1"
                                                                  Margin="3,0,3,0"/>

                                                <Rectangle Fill="LightGray" x:Name="HeaderRectangle" Width="5" Margin="0,5,0,5" Grid.Column="0" />
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsSelected" Value="True">
                                                    <Setter TargetName="HeaderRectangle" Property="Fill" Value="{DynamicResource PrimaryHueMidBrush}" />
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter TargetName="HeaderRectangle" Property="Fill" Value="{DynamicResource SecondaryAccentBrush}" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>

                                <Setter Property="HeaderTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <ContentPresenter Content="{TemplateBinding Content}">
                                                <ContentPresenter.LayoutTransform>
                                                    <RotateTransform Angle="270" />
                                                </ContentPresenter.LayoutTransform>
                                            </ContentPresenter>
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </TabControl.Resources>

                        <TabItem  HorizontalAlignment="Stretch" VerticalContentAlignment="Stretch">

                            <TabItem.Header>
                                <StackPanel Margin="10,0,10,3">
                                    <TextBlock Text="Random mode" />
                                </StackPanel>
                            </TabItem.Header>

                            <DataGrid     x:Name="dataGrid"  
                                          ItemsSource="{Binding CharacterCollection}"                                                  
                                          HeadersVisibility="Column"  
                                          CanUserAddRows="False"
                                          Padding="0,0,0,4"
                                          materialDesign:DataGridAssist.CellPadding="4 2 2 2"                                                   
                                          materialDesign:DataGridAssist.ColumnHeaderPadding="4 4 4 4"
                                          EnableRowVirtualization="False"
                                          Background="White"
                                          CanUserResizeColumns="False"
                                          CanUserResizeRows="False"
                                          VerticalContentAlignment="Stretch"
                                          VerticalAlignment="Stretch"
                                          HorizontalAlignment="Stretch"
                                          AutoGenerateColumns="False">
                                <DataGrid.Columns>

                                    <DataGridTemplateColumn IsReadOnly="True"
                                                                    Header=""
                                                                    Width="auto"
                                                                    >
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock VerticalAlignment="Center" Text="{Binding RelativeSource={RelativeSource FindAncestor,  
                                                                                                     AncestorType={x:Type DataGridRow}},
                                                                                                     Converter={StaticResource RowIndexConverter}}" />
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    
                                    <DataGridTemplateColumn IsReadOnly="True" Width="*" Header="Characters" >
                                        
                                        <DataGridTemplateColumn.HeaderStyle>
                                            <Style TargetType="DataGridColumnHeader">
                                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                                <Setter Property="SeparatorBrush" Value="Transparent" />
                                                <Setter Property="Background" Value="White" />
                                            </Style>
                                        </DataGridTemplateColumn.HeaderStyle>
                                        
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Grid.Column="0" VerticalAlignment="Center" Text="{Binding CharacterName}" >
                                                    <TextBlock.ToolTip>
                                                        <Grid >
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition/>
                                                                <ColumnDefinition />
                                                            </Grid.ColumnDefinitions>

                                                            <Grid.RowDefinitions>
                                                                <RowDefinition />
                                                                <RowDefinition />
                                                                <RowDefinition />
                                                                <RowDefinition />

                                                            </Grid.RowDefinitions>

                                                            <Label Content="Character name:" 
                                                                           HorizontalAlignment="Right"
                                                                           Grid.Row="0"
                                                                           Foreground="White"
                                                                           Grid.Column="0"/>

                                                            <Label Content="{Binding CharacterName}" 
                                                                           Grid.Row="0"
                                                                           Foreground="White"
                                                                           Grid.Column="1" />


                                                            <Label Content="Character prefix:" 
                                                                           HorizontalAlignment="Right"
                                                                           Grid.Row="1"
                                                                           Foreground="White"
                                                                           Grid.Column="0"/>

                                                            <Label Content="{Binding CharacterPrefix}" 
                                                                           Grid.Row="1"
                                                                           Foreground="White"
                                                                           Grid.Column="1" />


                                                            <Label Content="Character state:" 
                                                                           HorizontalAlignment="Right"
                                                                           Grid.Row="2"
                                                                           Foreground="White"
                                                                           Grid.Column="0"/>

                                                            <Label Content="{Binding State}" 
                                                                           Grid.Row="2"
                                                                           Foreground="White"
                                                                           Grid.Column="1" />

                                                            <Label Content="Assigned radio:" 
                                                                           HorizontalAlignment="Right"
                                                                           Grid.Row="3"
                                                                           Foreground="White"
                                                                           Grid.Column="0"/>

                                                            <Label Content="{Binding RadioNum, Converter={StaticResource RadioNumToStringConverter}}" 
                                                                           Grid.Row="3"
                                                                           Foreground="White"
                                                                           Grid.Column="1" />

                                                        </Grid>
                                                    </TextBlock.ToolTip>
                                                </TextBlock>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                        
                                    </DataGridTemplateColumn>

                                    <DataGridTemplateColumn  Width="auto">
                                        
                                        <DataGridTemplateColumn.Header>
                                            <TextBlock Text="Avail" ToolTip="Available" />
                                        </DataGridTemplateColumn.Header>
                                        
                                        <DataGridTemplateColumn.HeaderStyle>
                                            <Style TargetType="DataGridColumnHeader">
                                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                                <Setter Property="SeparatorBrush" Value="Transparent" />
                                                <Setter Property="BorderThickness" Value="0 0 0 0" />
                                                <Setter Property="Background" Value="White" />
                                            </Style>
                                        </DataGridTemplateColumn.HeaderStyle>
                                        
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <RadioButton GroupName="{Binding Path=CharacterName}" 
                                                             VerticalAlignment="Center" 
                                                             HorizontalAlignment="Center" 
                                                             IsChecked="{Binding State,
                                                                                 Mode=TwoWay, 
                                                                                 UpdateSourceTrigger=PropertyChanged, 
                                                                                 Converter = {StaticResource CharacterStateToBooleanConverter}, 
                                                                                 ConverterParameter={x:Static enums:CharacterState.Available}}" />
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>

                                    </DataGridTemplateColumn>
                                    
                                    <DataGridTemplateColumn  Header="On" >
                                        
                                        <DataGridTemplateColumn.HeaderStyle>
                                            <Style TargetType="DataGridColumnHeader">
                                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                                <Setter Property="SeparatorBrush" Value="Transparent" />
                                                <Setter Property="BorderThickness" Value="0 0 0 0" />
                                                <Setter Property="Background" Value="White" />
                                            </Style>
                                        </DataGridTemplateColumn.HeaderStyle>
                                        
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <RadioButton GroupName="{Binding Path=CharacterName}" 
                                                             VerticalAlignment="Center" 
                                                             HorizontalAlignment="Center" 
                                                             IsChecked="{Binding State, 
                                                                                 Mode=TwoWay,
                                                                                 UpdateSourceTrigger=PropertyChanged, 
                                                                                 Converter = {StaticResource CharacterStateToBooleanConverter}, 
                                                                                 ConverterParameter={x:Static enums:CharacterState.On}}" />
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>

                                    </DataGridTemplateColumn>

                                    <DataGridTemplateColumn Header="Off" Width="auto">
                                        
                                        <DataGridTemplateColumn.HeaderStyle>
                                            <Style TargetType="DataGridColumnHeader">
                                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                                <Setter Property="BorderThickness" Value="0 0 0 0" />
                                                <Setter Property="SeparatorBrush" Value="Transparent" />
                                                <Setter Property="Background" Value="White" />
                                            </Style>
                                        </DataGridTemplateColumn.HeaderStyle>
                                        
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <RadioButton GroupName="{Binding Path=CharacterName}" 
                                                             HorizontalAlignment="Center" 
                                                             VerticalAlignment="Center"
                                                             IsChecked="{Binding State, 
                                                                                 Mode=TwoWay,
                                                                                 UpdateSourceTrigger=PropertyChanged, 
                                                                                 Converter = {StaticResource CharacterStateToBooleanConverter}, 
                                                                                 ConverterParameter={x:Static enums:CharacterState.Off}}" />
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                        
                                    </DataGridTemplateColumn>

                                    <DataGridTemplateColumn Width="25">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <StackPanel   Orientation="Horizontal" 
                                                              IsEnabled="{Binding DataContext.CurrentState, 
                                                                                  RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:DialogView},
                                                                                  Converter={StaticResource IsEnabledDialogViewControlConverter}, 
                                                                                  ConverterParameter=StartSerialSelection|StartRadnomSelection}"                                                               HorizontalAlignment="Right">
                                                    <materialDesign:PopupBox Width="25"
                                                                             Margin="-5,0,0,0"
                                                                             Style="{DynamicResource MaterialDesignToolForegroundPopupBox}"  
                                                                             Padding="2 0 2 0">
                                                        <StackPanel Margin="0,10,0,10">
                                                            <Button IsEnabled="True"  Command="global:GlobalCommands.OpenCharacterFormCommand"
                                                                                      CommandParameter="{Binding}" >
                                                                    <Button.Content>
                                                                    <StackPanel Orientation="Horizontal" >
                                                                        <TextBlock Margin="5,0,0,0" Text="Edit" VerticalAlignment="Center" />
                                                                    </StackPanel>
                                                                </Button.Content>
                                                            </Button>

                                                            <Button IsEnabled="True"  Command="global:GlobalCommands.EditWithJSONEditorCommand"
                                                                                      CommandParameter="{Binding}" >
                                                                <Button.Content>
                                                                    <StackPanel Orientation="Horizontal" >
                                                                        <TextBlock Margin="5,0,0,0" Text="Edit with JSON editor" VerticalAlignment="Center" />
                                                                    </StackPanel>
                                                                </Button.Content>
                                                            </Button>

                                                            <Button IsEnabled="True"  Command="NavigationCommands.GoToPage"
                                                                                      CommandParameter="{Binding}" >
                                                                <Button.Content>
                                                                    <StackPanel Orientation="Horizontal" >
                                                                        <TextBlock Margin="5,0,0,0" Text="Run a wizard" VerticalAlignment="Center" />
                                                                    </StackPanel>
                                                                </Button.Content>
                                                            </Button>

                                                            <Button IsEnabled="True"  Command="global:GlobalCommands.ExportCharacterCommand"
                                                                                      CommandParameter="{Binding}" >
                                                                <Button.Content>
                                                                    <StackPanel Orientation="Horizontal" >
                                                                        <TextBlock Margin="5,0,0,0" Text="Export" VerticalAlignment="Center" />
                                                                    </StackPanel>
                                                                </Button.Content>
                                                            </Button>
                                                            <Button IsEnabled="False" 
                                                                    Command="{Binding DataContext.RemoveCharacterCommand, 
                                                                                      RelativeSource={RelativeSource Mode=FindAncestor, 
                                                                                      AncestorType=local:DialogView}}" CommandParameter="{Binding}" >
                                                                <Button.Content>
                                                                    <StackPanel Orientation="Horizontal" >
                                                                        <TextBlock Margin="5,0,0,0" Text="Delete" Foreground="Red" VerticalAlignment="Center" />
                                                                    </StackPanel>
                                                                </Button.Content>
                                                            </Button>
                                                        </StackPanel>
                                                    </materialDesign:PopupBox>
                                                </StackPanel>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>    
                                    
                                </DataGrid.Columns>
                            </DataGrid>

                        </TabItem>

                        <TabItem  HorizontalAlignment="Stretch" 
                                  VerticalContentAlignment="Stretch" 
                                  VerticalAlignment="Stretch" 
                                  HorizontalContentAlignment="Stretch">

                            <TabItem.Header>
                                <StackPanel>
                                    <TextBlock Text="Serial mode" Margin="10,0,10,3"/>
                                </StackPanel>
                            </TabItem.Header>

                            <Grid  Margin="5,10,5,10" Height="300" HorizontalAlignment="Stretch"   VerticalAlignment="Stretch">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <!-- Listbox populated with characters -->

                                <ListBox Grid.Column="0"
                                         Grid.Row="0"
                                         BorderBrush="LightGray"
                                         BorderThickness="1"
                                         VerticalAlignment="Stretch"
                                         VerticalContentAlignment="Stretch"
                                         HorizontalAlignment="Stretch"
                                         ItemsSource="{Binding CharacterCollection}"
                                         x:Name="CharactersListBox">

                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Converter = {StaticResource ListBoxItemConverter}}" />
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>

                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                            <cmd:EventToCommand Command="{Binding PreviewMouseLeftButtonDownCommand}" PassEventArgsToCommand="true"/>
                                        </i:EventTrigger>

                                        <i:EventTrigger EventName="PreviewMouseMove">
                                            <cmd:EventToCommand Command="{Binding PreviewMouseMoveCommand}" PassEventArgsToCommand="true"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>

                                </ListBox>

                                <!-- Textboxes for radio binding -->

                                <Grid HorizontalAlignment="Stretch" x:Name="RadioTextBoxesContainer" Height="auto"  Margin="20,0,0,0" Grid.Column="1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="auto" />
                                    </Grid.ColumnDefinitions>

                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>

                                    <TextBlock Text="R0: " 
                                               Foreground="Black" 
                                               Grid.Column="0" 
                                               VerticalAlignment="Center"   
                                               HorizontalAlignment="Left"  />
                                    <TextBox x:Name="Radio_0" 
                                             Grid.Column="1" 
                                             Height="20"  
                                             Style="{x:Null}" 
                                             IsReadOnly="True" 
                                             AllowDrop="True"   >

                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewDragEnter">
                                                <cmd:EventToCommand Command="{Binding DragEnterCommand}" PassEventArgsToCommand="true"/>
                                            </i:EventTrigger>

                                            <i:EventTrigger EventName="PreviewDrop">
                                                <cmd:EventToCommand Command="{Binding DropCommand}" PassEventArgsToCommand="true"/>
                                            </i:EventTrigger>

                                            <i:EventTrigger EventName="PreviewDragOver">
                                                <cmd:EventToCommand Command="{Binding DragOverCommand}" PassEventArgsToCommand="true"/>
                                            </i:EventTrigger>

                                        </i:Interaction.Triggers>
                                    </TextBox>
                                    <Button Grid.Column="2" Height="20"
                                                            BorderThickness="0"
                                                            IsEnabled="{Binding ElementName=Radio_0, Path=Text.Length}"
                                                            Command="{Binding ClearRadioBindingCommand}" 
                                                            CommandParameter="{Binding ElementName=Radio_0, Path=Name}" 
                                                            Background="Red" 
                                                            Width="20">
                                        <materialDesign:PackIcon Kind="ArrowLeft" />
                                    </Button>

                                    <TextBlock Text="R1: " 
                                               Grid.Column="0" 
                                               Grid.Row="1"   
                                               Foreground="Black" 
                                               VerticalAlignment="Center"   
                                               HorizontalAlignment="Right"  />
                                    <TextBox x:Name="Radio_1"  
                                             Grid.Column="1" 
                                             Grid.Row="1" 
                                             Height="20"  
                                             Style="{x:Null}" 
                                             IsReadOnly="True" 
                                             AllowDrop="True"  >

                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewDragEnter">
                                                <cmd:EventToCommand Command="{Binding DragEnterCommand}" PassEventArgsToCommand="true"/>
                                            </i:EventTrigger>

                                            <i:EventTrigger EventName="PreviewDrop">
                                                <cmd:EventToCommand Command="{Binding DropCommand}" PassEventArgsToCommand="true"/>
                                            </i:EventTrigger>

                                            <i:EventTrigger EventName="PreviewDragOver">
                                                <cmd:EventToCommand Command="{Binding DragOverCommand}" PassEventArgsToCommand="true"/>
                                            </i:EventTrigger>

                                        </i:Interaction.Triggers>
                                    </TextBox>
                                    <Button  Grid.Column="2" Grid.Row="1"  Height="20"
                                                            BorderThickness="0"
                                                            IsEnabled="{Binding ElementName=Radio_1, Path=Text.Length}"
                                                            Command="{Binding ClearRadioBindingCommand}" 
                                                            CommandParameter="{Binding ElementName=Radio_1, Path=Name}" 
                                                            Background="Red" 
                                                            Width="20">
                                        <materialDesign:PackIcon Kind="ArrowLeft" />
                                    </Button>

                                    <TextBlock Text="R2: " 
                                               Grid.Column="0" 
                                               Grid.Row="2"   
                                               Foreground="Black"  
                                               VerticalAlignment="Center"   
                                               HorizontalAlignment="Right"  />
                                    <TextBox x:Name="Radio_2" 
                                             Grid.Column="1" 
                                             Grid.Row="2" 
                                             Height="20"  
                                             Style="{x:Null}"  
                                             IsReadOnly="True" 
                                             AllowDrop="True"  >

                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewDragEnter">
                                                <cmd:EventToCommand Command="{Binding DragEnterCommand}" PassEventArgsToCommand="true"/>
                                            </i:EventTrigger>

                                            <i:EventTrigger EventName="PreviewDrop">
                                                <cmd:EventToCommand Command="{Binding DropCommand}" PassEventArgsToCommand="true"/>
                                            </i:EventTrigger>

                                            <i:EventTrigger EventName="PreviewDragOver">
                                                <cmd:EventToCommand Command="{Binding DragOverCommand}" PassEventArgsToCommand="true"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>

                                    </TextBox>
                                    <Button  Grid.Column="2" Grid.Row="2" Height="20"
                                                            BorderThickness="0"
                                                            IsEnabled="{Binding ElementName=Radio_2, Path=Text.Length}"                                                            
                                                            Command="{Binding ClearRadioBindingCommand}" 
                                                            CommandParameter="{Binding ElementName=Radio_2, Path=Name}" 
                                                            Background="Red" 
                                                            Width="20">
                                        <materialDesign:PackIcon Kind="ArrowLeft" />
                                    </Button>

                                    <TextBlock Text="R3: " 
                                               Grid.Column="0" 
                                               Grid.Row="3" 
                                               Foreground="Black"  
                                               VerticalAlignment="Center"   
                                               HorizontalAlignment="Right"  />
                                    <TextBox x:Name="Radio_3" 
                                             Grid.Column="1" 
                                             Grid.Row="3"   
                                             Style="{x:Null}" 
                                             IsReadOnly="True" 
                                             AllowDrop="True" 
                                             Height="20" >

                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewDragEnter">
                                                <cmd:EventToCommand Command="{Binding DragEnterCommand}" PassEventArgsToCommand="true"/>
                                            </i:EventTrigger>

                                            <i:EventTrigger EventName="PreviewDrop">
                                                <cmd:EventToCommand Command="{Binding DropCommand}" PassEventArgsToCommand="true"/>
                                            </i:EventTrigger>

                                            <i:EventTrigger EventName="PreviewDragOver">
                                                <cmd:EventToCommand Command="{Binding DragOverCommand}" PassEventArgsToCommand="true"/>
                                            </i:EventTrigger>

                                        </i:Interaction.Triggers>
                                    </TextBox>
                                    <Button Height="20" Grid.Column="2" Grid.Row="3"
                                                            BorderThickness="0"
                                                            IsEnabled="{Binding ElementName=Radio_3, Path=Text.Length}"                                                            
                                                            Command="{Binding ClearRadioBindingCommand}" 
                                                            CommandParameter="{Binding ElementName=Radio_3, Path=Name}" 
                                                            Background="Red" 
                                                            Width="20">
                                        <materialDesign:PackIcon Kind="ArrowLeft" />
                                    </Button>

                                    <TextBlock Text="R4: " 
                                               Grid.Column="0" 
                                               Grid.Row="4" 
                                               Foreground="Black" 
                                               VerticalAlignment="Center"   
                                               HorizontalAlignment="Right"  />
                                    <TextBox x:Name="Radio_4"  
                                             Grid.Column="1" 
                                             Grid.Row="4"  
                                             Style="{x:Null}"  
                                             IsReadOnly="True" 
                                             AllowDrop="True" 
                                             Height="20"  >

                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewDragEnter">
                                                <cmd:EventToCommand Command="{Binding DragEnterCommand}" PassEventArgsToCommand="true"/>
                                            </i:EventTrigger>

                                            <i:EventTrigger EventName="PreviewDrop">
                                                <cmd:EventToCommand Command="{Binding DropCommand}" PassEventArgsToCommand="true"/>
                                            </i:EventTrigger>

                                            <i:EventTrigger EventName="PreviewDragOver">
                                                <cmd:EventToCommand Command="{Binding DragOverCommand}" PassEventArgsToCommand="true"/>
                                            </i:EventTrigger>

                                        </i:Interaction.Triggers>
                                    </TextBox>
                                    <Button   Background="Red"  
                                                      Grid.Column="2" 
                                                      Grid.Row="4"
                                                      BorderThickness="0"
                                                      IsEnabled="{Binding ElementName=Radio_4, Path=Text.Length}"                                                            
                                                      Command="{Binding ClearRadioBindingCommand}" 
                                                      CommandParameter="{Binding ElementName=Radio_4, Path=Name}" 
                                                      Height="20" 
                                                      Width="20">
                                        <materialDesign:PackIcon Kind="ArrowLeft" />
                                    </Button>

                                    <TextBlock Text="R5: " 
                                               Grid.Column="0" 
                                               Grid.Row="5" 
                                               Foreground="Black" 
                                               VerticalAlignment="Center"   
                                               HorizontalAlignment="Right"  />
                                    <TextBox x:Name="Radio_5"  
                                             Grid.Column="1" 
                                             Grid.Row="5"  
                                             Style="{x:Null}"  
                                             IsReadOnly="True" 
                                             AllowDrop="True" 
                                             Height="20"  >

                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewDragEnter">
                                                <cmd:EventToCommand Command="{Binding DragEnterCommand}" PassEventArgsToCommand="true"/>
                                            </i:EventTrigger>

                                            <i:EventTrigger EventName="PreviewDrop">
                                                <cmd:EventToCommand Command="{Binding DropCommand}" PassEventArgsToCommand="true"/>
                                            </i:EventTrigger>

                                            <i:EventTrigger EventName="PreviewDragOver">
                                                <cmd:EventToCommand Command="{Binding DragOverCommand}" PassEventArgsToCommand="true"/>
                                            </i:EventTrigger>

                                        </i:Interaction.Triggers>
                                    </TextBox>
                                    <Button Height="20" Grid.Column="2" Grid.Row="5" 
                                                        BorderThickness="0"
                                                        IsEnabled="{Binding ElementName=Radio_5, Path=Text.Length}"                                                            
                                                        Command="{Binding ClearRadioBindingCommand}" 
                                                        CommandParameter="{Binding ElementName=Radio_5, Path=Name}" 
                                                        Background="Red" 
                                                        Width="20">
                                        <materialDesign:PackIcon Kind="ArrowLeft" />
                                    </Button>

                                </Grid>
                            </Grid>

                        </TabItem>

                        <TabItem BorderThickness="0" BorderBrush="White">
                            <TabItem.Header>
                                <StackPanel Margin="10,0,10,3">
                                    <TextBlock Text="Dialog settings" />
                                </StackPanel>
                            </TabItem.Header>

                            <!-- IsEnabled="{Binding IsDialogStopped}" changed by isaac TODO -->


                            <Grid>
                                <DataGrid ItemsSource="{Binding DialogModelCollection}"
                                          x:Name="DialogSettingsGrid"
                                          IsEnabled="True" 
                                          HeadersVisibility="Column" 
                                          CanUserAddRows="False"
                                          Padding="0,0,0,4"
                                          materialDesign:DataGridAssist.CellPadding="4 6 2 6"                                                   
                                          materialDesign:DataGridAssist.ColumnHeaderPadding="4 8 4 8"
                                          EnableRowVirtualization="True"
                                          CanUserResizeColumns="False"
                                          CanUserResizeRows="False"
                                          AutoGenerateColumns="False"
                                          Background="White"
                                          HorizontalAlignment="Stretch"
                                          VerticalAlignment="Stretch">

                                    <DataGrid.Columns>
                                        <DataGridTemplateColumn IsReadOnly="True" Width="auto"  >
                                            
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock VerticalAlignment="Center" Text="{Binding RelativeSource={RelativeSource FindAncestor,  
                                                                                                         AncestorType={x:Type DataGridRow}},
                                                                                                         Converter={StaticResource RowIndexConverter}}" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                            
                                        </DataGridTemplateColumn>

                                        <DataGridTemplateColumn IsReadOnly="True" Width="*" Header="Dialog models" >
 
                                            <DataGridTemplateColumn.HeaderStyle>
                                                <Style TargetType="DataGridColumnHeader">
                                                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                                                    <Setter Property="SeparatorBrush" Value="Transparent" />
                                                    <Setter Property="BorderThickness" Value="0"/>
                                                    <Setter Property="Background" Value="White" />
                                                </Style>
                                            </DataGridTemplateColumn.HeaderStyle>

                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock VerticalAlignment="Center" Text="{Binding ModelsCollectionName}" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                            
                                        </DataGridTemplateColumn>

                                        <DataGridTemplateColumn Header="On" Width="auto">
                                            <DataGridTemplateColumn.HeaderStyle>
                                                <Style TargetType="DataGridColumnHeader">
                                                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                                                    <Setter Property="SeparatorBrush" Value="Transparent" />
                                                    <Setter Property="Background" Value="White" />
                                                </Style>
                                            </DataGridTemplateColumn.HeaderStyle>
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <RadioButton GroupName="{Binding Path=ModelsCollectionName}" VerticalAlignment="Center" HorizontalAlignment="Center" 
                                                                 IsChecked="{Binding State, 
                                                                                     Mode=TwoWay,
                                                                                     UpdateSourceTrigger=PropertyChanged, 
                                                                                     Converter = {StaticResource ModelDialogStateToBooleanConverter}, 
                                                                                     ConverterParameter={x:Static enums:ModelDialogState.On}}" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>

                                        <DataGridTemplateColumn Header="Off" Width="auto">
                                            <DataGridTemplateColumn.HeaderStyle>
                                                <Style TargetType="DataGridColumnHeader">
                                                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                                                    <Setter Property="SeparatorBrush" Value="Transparent" />
                                                    <Setter Property="Background" Value="White" />
                                                </Style>
                                            </DataGridTemplateColumn.HeaderStyle>
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <RadioButton GroupName="{Binding Path=ModelsCollectionName}" VerticalAlignment="Center" HorizontalAlignment="Center" 
                                                                 IsChecked="{Binding State, 
                                                                                     Mode=TwoWay,
                                                                                     UpdateSourceTrigger=PropertyChanged, 
                                                                                     Converter = {StaticResource ModelDialogStateToBooleanConverter} , 
                                                                                     ConverterParameter={x:Static enums:ModelDialogState.Off}}" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>

                                        <DataGridTemplateColumn>
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <materialDesign:PopupBox PlacementMode="BottomAndAlignRightEdges" Opened="PopupBox_Opened"  HorizontalContentAlignment="Stretch" StaysOpen="True">
                                                        <materialDesign:PopupBox.ToggleContent>
                                                            <materialDesign:PackIcon Kind="DotsHorizontal" />
                                                        </materialDesign:PopupBox.ToggleContent>
                                                        
                                                        <ComboBox materialDesign:HintAssist.Hint="Choose dialog model..."
                                                                          Style="{StaticResource MaterialDesignFloatingHintComboBox}"
                                                                          Tag="{Binding}"
                                                                          IsDropDownOpen="True"                                                                         
                                                                          x:Name="ChooseDialogModelCbx"
                                                                          Background="White"                                                                          
                                                                          HorizontalAlignment="Left"
                                                                          HorizontalContentAlignment="Stretch"
                                                                          VerticalContentAlignment="Stretch"
                                                                          IsEditable="True"    
                                                                          Margin="0,0,5,5"
                                                                          ItemsSource="{Binding ArrayOfDialogModels}" 
                                                                          DisplayMemberPath="Name">

                                                            <ComboBox.ItemsPanel>
                                                                <ItemsPanelTemplate>
                                                                    <VirtualizingStackPanel/>
                                                                </ItemsPanelTemplate>
                                                            </ComboBox.ItemsPanel>

                                                            <i:Interaction.Triggers>
                                                                <i:EventTrigger EventName="SelectionChanged">
                                                                    <cmd:EventToCommand Command="{Binding DataContext.DialogModelSelectionChangedCommand , 
                                                                                                          RelativeSource={RelativeSource AncestorType=local:DialogView}}" 
                                                                                        PassEventArgsToCommand="true"/>
                                                                </i:EventTrigger>
                                                            </i:Interaction.Triggers>
                                                        </ComboBox>
                                                    </materialDesign:PopupBox>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>

                                    </DataGrid.Columns>
                                </DataGrid>
                            </Grid>
                        </TabItem>

                    </TabControl>

                    <Grid Margin="0,40,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>

                        <Button x:Name="StopDialogBtn"
                                Content="Stop dialog"
                                Style="{DynamicResource MaterialDesignRaisedButton}"
                                Command="{Binding StopDialog}" 
                                HorizontalAlignment="Center"
                                IsEnabled="{Binding ElementName=StartDialogBtn, Path=IsEnabled, Converter={StaticResource InvertBooleanConverter}}"
                                Grid.Column="0" />

                        <Button Content="Start dialog"
                                x:Name="StartDialogBtn"
                                Style="{DynamicResource MaterialDesignRaisedButton}"
                                Command="{Binding GenerateDialog}" 
                                HorizontalAlignment="Center"
                                IsEnabled="{Binding CurrentState, 
                                                    Converter={StaticResource IsEnabledDialogViewControlConverter}, 
                                                    ConverterParameter=RandomSelectionStarted|SerialSelectionStarted}"
                                Grid.Column="1" />

                    </Grid>

                </StackPanel>
            </Grid>
        </Border>

        <Separator Grid.Column="1" BorderBrush="LightGray" SnapsToDevicePixels="True" BorderThickness="1"   VerticalAlignment="Stretch" >
            <Separator.LayoutTransform>
                <RotateTransform Angle="90" />
            </Separator.LayoutTransform>
        </Separator>

        <Grid Grid.Row="0" Grid.Column="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <Grid.RowDefinitions>
                <RowDefinition Height="4*" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <!-- Dialog view -->

            <controls:DialogGeneratorControl Grid.Row="0" 
                                    DataContext="{Binding DialogGeneratorViewModel}"  
                                    CollectionChanged="{Binding IsItemAdded}" />

            <!-- end -->
            
            <GridSplitter  
                      Grid.Row="1" 
                      Height="10"
                      Margin="0"
                      Background="White" 
                      BorderThickness="0,0,0,0" 
                      BorderBrush="LightGray" 
                      VerticalAlignment="Stretch" 
                      HorizontalAlignment="Stretch" />
           
            <!-- Debug view -->

            <TabControl  Grid.Row="2" 
                         BorderThickness="0,1,1,1"
                         BorderBrush="LightGray"
                         HorizontalAlignment="Stretch" 
                         TabStripPlacement="Bottom"
                         Padding="0"
                         Margin="-4,0,1,0"
                         VerticalAlignment="Stretch"
                         Background="White"
                         Style="{x:Null}"
                         x:Name="LoggerMessagesTabControl">

                <TabControl.Resources>
                    <Style TargetType="TabItem">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="TabItem">
                                    <Grid Name="Panel">
                                        <Grid.RowDefinitions>
                                            <RowDefinition />
                                        </Grid.RowDefinitions>
                                        <ContentPresenter   Grid.Row="0" 
                                                            x:Name="ContentSite"
                                                            VerticalAlignment="Center"
                                                            HorizontalAlignment="Center"
                                                           
                                                            ContentSource="Header"
                                                            Height="auto"
                                                            Margin="10,3,10,3"/>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter TargetName="Panel" Property="Background" Value="{DynamicResource PrimaryHueMidBrush}" />
                                            <Setter Property="Foreground" Value="White" />
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="Panel" Property="Background" Value="{DynamicResource SecondaryAccentBrush}" />
                                            <Setter Property="Foreground" Value="White" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </TabControl.Resources>

                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <cmd:EventToCommand Command="{Binding RefreshTabItem}" PassEventArgsToCommand="true"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>

                <TabItem Tag="Errors" BorderThickness="0">

                    <TabItem.ContextMenu>
                        <ContextMenu Background="White">
                            <MenuItem Header="Clear All" 
                                      Command="{Binding ClearAllMessages}" 
                                      CommandParameter="ErrorMessagesCollection"  
                                      Background="White" >
                                <MenuItem.Icon>
                                    <Image Source="pack://application:,,,/Resources/Images/clearAll.png" />
                                </MenuItem.Icon>
                            </MenuItem>
                        </ContextMenu>
                    </TabItem.ContextMenu>

                    <TabItem.Header>
                        <StackPanel Orientation="Horizontal" >
                            <Image Width="15" Height="15"  Source="pack://application:,,,/Resources/Images/error.png" />
                            <TextBlock Margin="2,0,0,0" Text="{Binding ErrorMessagesCollection.Count}"/>
                            <TextBlock Margin="5,0,0,0" Text="Errors"/>
                        </StackPanel>
                    </TabItem.Header>

                    <ListView Margin="0,0,1,0" 
                              BorderBrush="LightGray" 
                              x:Name="ErrorsList" 
                              HorizontalContentAlignment="Stretch" 
                              HorizontalAlignment="Stretch"
                              
                              materialDesign:DataGridAssist.CellPadding="4 2 2 2"                                                   
                              materialDesign:DataGridAssist.ColumnHeaderPadding="4 4 4 4"
                              VerticalAlignment="Stretch"
                              ScrollViewer.CanContentScroll="True"
                              ScrollViewer.HorizontalScrollBarVisibility="Visible"
                              ScrollViewer.VerticalScrollBarVisibility="Visible"
                              ItemsSource="{Binding ErrorMessagesCollection}">
                        
                        <ListView.ItemContainerStyle>
                            <Style TargetType="{x:Type ListViewItem}">
                                <Setter Property="ToolTip">
                                    <Setter.Value>
                                        <TextBlock TextWrapping="Wrap" MaxWidth="500" Text="{Binding Message}" />
                                    </Setter.Value>
                                </Setter>
                            </Style>

                        </ListView.ItemContainerStyle>
                        
                        <ListView.View>
                            <GridView >
                                <GridViewColumn x:Name="ErrorGridViewColumn" Header="Description"
                                                Width="{Binding RelativeSource={RelativeSource 
                                                                Mode=FindAncestor, 
                                                                AncestorType=ListView}, 
                                                                Converter={StaticResource StarWidthConverter}}"                                               
                                                DisplayMemberBinding="{Binding Message}" />
                                <GridViewColumn Header="File" Width="200"  DisplayMemberBinding="{Binding SourceFile}" />
                                <GridViewColumn Header="Line" Width="100" DisplayMemberBinding="{Binding Line}" />
                            </GridView>
                        </ListView.View>
                        
                    </ListView>

                </TabItem>

                <TabItem Tag = "Warnings" >

                    <TabItem.ContextMenu>
                        <ContextMenu Background="White">
                            <MenuItem Header="Clear All" 
                                      Command="{Binding ClearAllMessages}" 
                                      CommandParameter="WarningMessagesCollection"  
                                      Background="White" >
                                <MenuItem.Icon>
                                    <Image Source="pack://application:,,,/Resources/Images/clearAll.png" />
                                </MenuItem.Icon>
                            </MenuItem>
                        </ContextMenu>
                    </TabItem.ContextMenu>

                    <TabItem.Header>
                        <StackPanel Orientation="Horizontal" >
                            <Image Width="15" Height="15"  Source="pack://application:,,,/Resources/Images/warning.png" />
                            <TextBlock Margin="2,0,0,0" Text="{Binding WarningMessagesCollection.Count}"/>
                            <TextBlock Margin="5,0,0,0" Text="Warnings"/>
                        </StackPanel>

                    </TabItem.Header>

                    <ListView Margin="0,0,1,0" 
                              BorderBrush="LightGray"  
                              x:Name="WarningsList"
                              ScrollViewer.CanContentScroll="True" 
                              ScrollViewer.VerticalScrollBarVisibility="Visible"
                              ScrollViewer.HorizontalScrollBarVisibility="Visible"
                              HorizontalContentAlignment="Stretch" 
                              HorizontalAlignment="Stretch"
                              materialDesign:DataGridAssist.CellPadding="4 2 2 2"                                                   
                              materialDesign:DataGridAssist.ColumnHeaderPadding="4 4 4 4"
                              VerticalAlignment="Stretch" 
                              ItemsSource="{Binding WarningMessagesCollection}">
                        <ListView.ItemContainerStyle>
                            <Style TargetType="{x:Type ListViewItem}">
                                <Setter Property="ToolTip">
                                    <Setter.Value>
                                        <TextBlock TextWrapping="Wrap" MaxWidth="500" Text="{Binding Message}" />
                                    </Setter.Value>
                                </Setter>
                            </Style>

                        </ListView.ItemContainerStyle>
                        <ListView.View>
                            <GridView >
                                <GridViewColumn x:Name="WarningGridViewColumn" Header="Description"
                                                Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                                                AncestorType=ListView}, 
                                                                Converter={StaticResource StarWidthConverter}}" 
                                                DisplayMemberBinding="{Binding Message}" />

                                <GridViewColumn Header="File" Width="200"  DisplayMemberBinding="{Binding SourceFile}" />
                                <GridViewColumn Header="Line" Width="100" DisplayMemberBinding="{Binding Line}" />
                            </GridView>
                        </ListView.View>
                    </ListView>
                </TabItem>

                <TabItem  Tag="Info"  >

                    <TabItem.ContextMenu>
                        <ContextMenu Background="White">
                            <MenuItem Header="Clear All" 
                                      Command="{Binding ClearAllMessages}" 
                                      CommandParameter="InfoMessagesCollection"  
                                      Background="White" >
                                <MenuItem.Icon>
                                    <Image Source="pack://application:,,,/Resources/Images/clearAll.png" />
                                </MenuItem.Icon>
                            </MenuItem>
                        </ContextMenu>
                    </TabItem.ContextMenu>

                    <TabItem.Header>
                        <StackPanel  Orientation="Horizontal" >
                            <Image Width="15" Height="15"  Source="pack://application:,,,/Resources/Images/info.png" />
                            <TextBlock Margin="2,0,0,0" Text="{Binding InfoMessagesCollection.Count}"/>
                            <TextBlock Margin="5,0,0,0" Text="Info"/>
                        </StackPanel>
                    </TabItem.Header>


                    <ListView Margin="0,0,1,0" 
                              BorderBrush="LightGray"  
                              x:Name="InfoList" 
                              ScrollViewer.CanContentScroll="True" 
                              ScrollViewer.VerticalScrollBarVisibility="Visible"
                              ScrollViewer.HorizontalScrollBarVisibility="Visible"
                              HorizontalContentAlignment="Stretch" 
                              HorizontalAlignment="Stretch"
                              materialDesign:DataGridAssist.CellPadding="4 2 2 2"                                                   
                              materialDesign:DataGridAssist.ColumnHeaderPadding="4 4 4 4"
                              VerticalAlignment="Stretch"
                              ItemsSource="{Binding InfoMessagesCollection}">
                        <ListView.ItemContainerStyle>
                            <Style TargetType="{x:Type ListViewItem}">
                                <Setter Property="ToolTip">
                                    <Setter.Value>
                                        <TextBlock TextWrapping="Wrap" MaxWidth="500" Text="{Binding Message}" />
                                    </Setter.Value>
                                </Setter>
                            </Style>

                        </ListView.ItemContainerStyle>
                        <ListView.View>
                            <GridView>
                                <GridViewColumn x:Name="InfoGridViewColumn" Header="Description" 
                                                Width="{Binding RelativeSource={RelativeSource 
                                                                Mode=FindAncestor, 
                                                                AncestorType=ListView}, 
                                                                Converter={StaticResource StarWidthConverter}}" 
                                                DisplayMemberBinding="{Binding Message}">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Message}" >
                                                <TextBlock.ToolTip>
                                                    <TextBlock Text="{Binding Message}" />
                                                </TextBlock.ToolTip>
                                            </TextBlock>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                                <GridViewColumn Header="File" Width="200"  DisplayMemberBinding="{Binding SourceFile}" />
                                <GridViewColumn Header="Line" Width="100" DisplayMemberBinding="{Binding Line}" />

                            </GridView>
                        </ListView.View>
                    </ListView>
                </TabItem>

                <TabItem Tag="HeatMapUpdate" >

                    <TabItem.Header>
                        <StackPanel  Orientation="Horizontal" >
                            <Image Width="20" Height="20"  Source="pack://application:,,,/Resources/Images/signalReception.png" />
                            <TextBlock Margin="5,0,0,0" Text="HeatMapUpdate"/>
                        </StackPanel>
                    </TabItem.Header>

                    <Grid HorizontalAlignment="Stretch" 
                          Background="White" 
                          VerticalAlignment="Stretch">

                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"></RowDefinition>
                            <RowDefinition Height="*"></RowDefinition>
                        </Grid.RowDefinitions>

                        <StackPanel Orientation="Horizontal" Grid.Row="0">

                            <DataGrid   Margin="5,5,5,0" 
                                        x:Name="DebugGrid"
                                        Width="auto"
                                        GridLinesVisibility="All"
                                        Height="auto"
                                        Background="White" 
                                        VerticalGridLinesBrush="LightGray" 
                                        HorizontalGridLinesBrush="LightGray" 
                                        BorderBrush="LightGray" 
                                        BorderThickness="1,1,0,0"
                                        HeadersVisibility="Column"
                                        CanUserAddRows="False"
                                        IsReadOnly="True"
                                        IsHitTestVisible="False"
                                        ItemsSource="{Binding HeatMapUpdate, Converter={StaticResource MatrixToDataViewConverter}}">

                                <DataGrid.ColumnHeaderStyle>
                                    <Style TargetType="DataGridColumnHeader">
                                        <Setter Property="Background" Value="WhiteSmoke" />
                                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                                        <Setter Property="BorderThickness" Value="0,0,1,0" />
                                        <Setter Property="BorderBrush" Value="LightGray"/>
                                    </Style>
                                </DataGrid.ColumnHeaderStyle>
                                <DataGrid.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self} ,
                                                                              Converter={StaticResource ValueToColorConverter}}"/>
                                        <Setter Property="BorderThickness" Value="0" />
                                        <Setter Property="TextBlock.TextAlignment" Value="Center" />
                                    </Style>
                                </DataGrid.CellStyle>
                            </DataGrid>

                            <Grid Width="200" Height="auto">

                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>

                                <Grid Grid.Row="0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>

                                    <Label HorizontalAlignment="Right" 
                                           VerticalAlignment="Center" 
                                           Grid.Column="0"
                                           Content="Character 1:" />

                                    <TextBlock Grid.Column="1" VerticalAlignment="Center" TextAlignment="Left"   IsEnabled="False" >                                    
                                        <Run FontWeight="Bold" Foreground="Black" Text="{Binding Character1Prefix }" />
                                    </TextBlock>

                                </Grid>

                                <Grid Grid.Row="1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>

                                    <Label HorizontalAlignment="Right" 
                                           VerticalAlignment="Center" 
                                           Grid.Column="0"  
                                           Content="Character 2:" />

                                    <TextBlock Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Left" IsEnabled="False" >                                   
                                        <Run FontWeight="Bold" Foreground="Black" Text="{Binding Character2Prefix}" />
                                    </TextBlock>

                                </Grid>

                                <Grid Grid.Row="2">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>

                                    <Label HorizontalAlignment="Right" 
                                           Grid.Column="0"
                                           VerticalAlignment="Center" 
                                           VerticalContentAlignment="Center" 
                                           HorizontalContentAlignment="Right" 
                                           Content="RSSIsum:" />

                                    <TextBlock Grid.Column="1" 
                                               TextAlignment="Left" 
                                               VerticalAlignment="Center" 
                                               HorizontalAlignment="Left" 
                                               IsEnabled="False" >                                   
                                        <Run FontWeight="Bold" Foreground="Black" Text="{Binding RSSIsum}" />
                                    </TextBlock>

                                </Grid>

                                <Grid Grid.Row="3">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>

                                    <Label HorizontalAlignment="Right" 
                                           VerticalAlignment="Center" 
                                           VerticalContentAlignment="Center"  
                                           HorizontalContentAlignment="Right" 
                                           Grid.Column="0" 
                                           Content="RSSIstable:" />

                                    <TextBlock Grid.Column="1" 
                                               VerticalAlignment="Center"  
                                               HorizontalAlignment="Left" 
                                               Grid.Row="0" 
                                               IsEnabled="False" >                                  
                                        <Run FontWeight="Bold" Foreground="Black" Text="{Binding RSSIstable}" />
                                    </TextBlock>

                                </Grid>
                            </Grid>
                        </StackPanel>
                    </Grid>
                </TabItem>
            </TabControl>
        </Grid>
     
    </Grid>
    
</core:PageBase>

